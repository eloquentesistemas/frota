<?php

namespace App\Http\Controllers;

:useModel
use Illuminate\View\View;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;


class :modelController extends Controller
{
    public function validated($type,$request){
        :validatedStoreUpdate
        return $request->only(:columns);
    }
    /**
     * Display a listing of the resource.
     */
    public function index(Request $request): JsonResponse
    {

        $search = $request->get("search", "");
        if ($search == null) {
            $search = "";
        }
        $:table = :model::search($search)
        ->paginate(1000);

        return response()->json($:table);
    }



    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request): JsonResponse
    {

        $validated = $this->validated("store",$request);

        $:tableSingular = :model::create($validated);

         return response()->json($:tableSingular);
    }

    /**
     * Display the specified resource.
     */
    public function show(Request $request, $id):JsonResponse
    {
        $:tableSingular = :model::find($id);

       return response()->json($:tableSingular);
    }


    /**
     * Update the specified resource in storage.
     */
    public function update(
        Request $request,
                $id
    ): JsonResponse{

        $:tableSingular = :model::find($id);
        $validated = $this->validated("update",$request);

        $:tableSingular->update($validated);

         return response()->json($:tableSingular);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Request $request, $id): JsonResponse
    {
        $:tableSingular = :model::find($id);
        $:tableSingular->delete();

       return response()->json(["success"=>true,"message"=>"Removed success"]);
    }

}
